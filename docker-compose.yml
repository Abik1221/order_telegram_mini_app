version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: dockerfile
    command: sh -c "python manage.py migrate --noinput && gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    environment:
      DEBUG: "false"
      SECRET_KEY: change-me
      DATABASE_URL: postgres://app:app@db:5432/app
      ALLOWED_HOSTS: localhost,127.0.0.1
      BOT_TOKEN: ${BOT_TOKEN}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  bot:
    build:
      context: .
      dockerfile: dockerfile
    command: python bot.py
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      WEBAPP_URL: http://localhost:8000/webapp/
    depends_on:
      - web
    volumes:
      - .:/app

volumes:
  db_data:
